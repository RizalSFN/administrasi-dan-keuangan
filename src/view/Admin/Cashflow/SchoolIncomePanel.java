/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Admin.Cashflow;

import controller.IncomeSourceController;
import controller.SchoolCashflowController;
import controller.SchoolIncomeController;
import java.awt.Image;
import java.io.File;
import java.math.BigDecimal;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.SchoolCashflow;
import model.SchoolIncome;
import view.Admin.AdminDashboard;

/**
 *
 * @author RIZAL
 */
public class SchoolIncomePanel extends javax.swing.JPanel {

    private AdminDashboard adminDashboard;
    private File selectedFile = null;

    /**
     * Creates new form SchoolIncomePanel
     */
    public SchoolIncomePanel(AdminDashboard adminDashboard) {
        initComponents();
        this.adminDashboard = adminDashboard;
        tampilDataKategori();
        isiComboKategori();
    }

    private void isiComboKategori() {
        IncomeSourceController kategoriController = new IncomeSourceController();
        List<String> namaKategori = kategoriController.getAllKategoriNames();
        cmbKategori.removeAllItems();
        for (String nama : namaKategori) {
            cmbKategori.addItem(nama);
        }
    }

    private void tampilDataKategori() {
        SchoolIncomeController controller = new SchoolIncomeController();
        List<SchoolIncome> incomeList = controller.tampilkanSemuaIncome();

        // Siapkan kolom
        String[] kolom = {"ID", "Kategori", "Jumlah", "Tanggal", "Bukti", "Keterangan"};
        DefaultTableModel model = new DefaultTableModel(null, kolom);

        // Tambahkan baris
        for (SchoolIncome si : incomeList) {
            Object[] row = {
                si.getId(),
                si.getNama(),
                si.getJumlah(),
                si.getTanggalPemasukan(),
                si.getBuktiTransaksi(),
                si.getKeterangan()
            };
            model.addRow(row);
        }

        tabelPemasukan.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtKeterangan = new javax.swing.JTextField();
        btnUpload = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPemasukan = new javax.swing.JTable();
        btnTambah = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbKategori = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateChooserTanggal = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btnLihatBukti = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Pemasukan");

        btnUpload.setText("Upload Bukti");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        tabelPemasukan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelPemasukan);

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        jLabel2.setText("Kategori :");

        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Jumlah :");

        jLabel4.setText("Tanggal :");

        jLabel5.setText("Keterangan :");

        btnLihatBukti.setText("Lihat Bukti");
        btnLihatBukti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLihatBuktiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(334, 334, 334))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtJumlah))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(dateChooserTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtKeterangan))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLihatBukti, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cmbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(dateChooserTanggal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpload)
                            .addComponent(btnTambah)
                            .addComponent(btnLihatBukti))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        JFileChooser chooser = new JFileChooser();
        int result = chooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = chooser.getSelectedFile();
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        try {
            String namaKategoriDipilih = cmbKategori.getSelectedItem().toString();
            IncomeSourceController isc = new IncomeSourceController();
            int sourceId = isc.getIdByNama(namaKategoriDipilih);
            BigDecimal jumlah = new BigDecimal(txtJumlah.getText().trim());
            Date selectedDate = dateChooserTanggal.getDate();

            if (selectedDate == null || selectedFile == null) {
                JOptionPane.showMessageDialog(this, "Tanggal dan bukti harus dipilih.");
                return;
            }

            String keterangan = txtKeterangan.getText();
            LocalDate tanggalPemasukan = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            // Simpan file bukti
            File folder = new File("uploads");
            if (!folder.exists()) {
                folder.mkdirs();
            }

            String buktiPath = "uploads/" + System.currentTimeMillis() + "_" + selectedFile.getName();
            Files.copy(selectedFile.toPath(), Paths.get(buktiPath), StandardCopyOption.REPLACE_EXISTING);

            // Simpan data
            SchoolIncome income = new SchoolIncome();
            income.setSourceId(sourceId);
            income.setJumlah(jumlah);
            income.setTanggalPemasukan(tanggalPemasukan);
            income.setBuktiTransaksi(buktiPath);
            income.setKeterangan(keterangan);
            income.setCreatedBy(1); // Ganti sesuai user login

            SchoolIncomeController controller = new SchoolIncomeController();
            boolean success = controller.tambahIncome(income);

            if (success) {
                // Ambil ID terakhir (misalnya lewat controller)
                int incomeId = controller.getLastInsertedIncomeId();

                // Ambil saldo terakhir
                SchoolCashflowController cashflowController = new SchoolCashflowController();
                BigDecimal saldoSebelumnya = cashflowController.getLastSaldo();

                // Buat objek cashflow
                SchoolCashflow cashflow = new SchoolCashflow();
                cashflow.setTipe("pemasukan");
                cashflow.setIncomeId(incomeId);
                cashflow.setExpenseId(0);
                cashflow.setJumlah(jumlah);
                cashflow.setTanggal(tanggalPemasukan);
                cashflow.setSaldoAwal(saldoSebelumnya);
                cashflow.setSaldoAkhir(saldoSebelumnya.add(jumlah));
                cashflow.setKeterangan(keterangan);

                boolean insertedCashflow = cashflowController.createSchoolCashflow(cashflow);

                if (insertedCashflow) {
                    JOptionPane.showMessageDialog(this, "Pemasukan & Cashflow berhasil disimpan.");
                    tampilDataKategori();
                    txtJumlah.setText("");
                    txtKeterangan.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Pemasukan tersimpan, namun gagal menyimpan cashflow.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pemasukan.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnLihatBuktiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLihatBuktiActionPerformed
        int selectedRow = tabelPemasukan.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data terlebih dahulu!");
            return;
        }

        int buktiColumnIndex = 4;
        String buktiPath = tabelPemasukan.getValueAt(selectedRow, buktiColumnIndex).toString();

        // Tambahkan path absolut
        File buktiFile = new File(System.getProperty("user.dir") + File.separator + buktiPath);
        System.out.println("Cek path file: " + buktiFile.getAbsolutePath());
        if (!buktiFile.exists()) {
            JOptionPane.showMessageDialog(this, "File bukti tidak ditemukan!\n" + buktiFile.getAbsolutePath());
            return;
        }

        JDialog dialog = new JDialog();
        dialog.setTitle("Bukti Transaksi");
        dialog.setSize(600, 600);
        dialog.setLocationRelativeTo(this);

        JLabel imageLabel = new JLabel();
        imageLabel.setHorizontalAlignment(JLabel.CENTER);

        // Load gambar
        ImageIcon icon = new ImageIcon(buktiFile.getAbsolutePath());
        Image img = icon.getImage().getScaledInstance(550, 500, Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(img));

        dialog.add(imageLabel);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnLihatBuktiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLihatBukti;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpload;
    private javax.swing.JComboBox<String> cmbKategori;
    private com.toedter.calendar.JDateChooser dateChooserTanggal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelPemasukan;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtKeterangan;
    // End of variables declaration//GEN-END:variables
}
