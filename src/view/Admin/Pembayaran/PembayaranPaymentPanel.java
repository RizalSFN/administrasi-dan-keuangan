/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Admin.Pembayaran;

import controller.InvoiceController;
import controller.PaymentController;
import controller.StudentController;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Invoice;
import model.Payment;
import model.Student;
import utils.EmailSender;
import view.Admin.AdminDashboard;

/**
 *
 * @author RIZAL
 */
public class PembayaranPaymentPanel extends javax.swing.JPanel {

    private AdminDashboard adminDashboard;

    /**
     * Creates new form PembayaranPaymentPanel
     */
    public PembayaranPaymentPanel(AdminDashboard adminDashboard) {
        initComponents();
        this.adminDashboard = adminDashboard;
        tampilDataPayment();
    }

    public void tampilDataPayment() {
        PaymentController controller = new PaymentController();
        List<Payment> paymentList = controller.getPayments(null, null);

        String[] kolom = {"ID", "No", "Invoice_id", "Bukti_pembayaran", "Tanggal_bayar", "Jumlah_bayar", "Jenis_pembayaran", "Status"};
        DefaultTableModel model = new DefaultTableModel(null, kolom);

        int nomor = 1;
        for (Payment pay : paymentList) {
            Object[] row = {
                pay.getId(),
                nomor++,
                pay.getInvoiceId(),
                pay.getBuktiPembayaran(),
                pay.getTanggalBayar(),
                pay.getJumlahBayar(),
                pay.getJenisPembayaran(),
                pay.getStatusVerifikasi()
            };
            model.addRow(row);
        }

        tabelPayment.getColumnModel().getColumn(0).setMinWidth(0);
        tabelPayment.getColumnModel().getColumn(0).setMaxWidth(0);
        tabelPayment.setModel(model);
    }

    public void filterDataPayment() {
        String selectedStatus = cmbStatus.getSelectedItem().toString();
        String invoideIdSearch = txtCari.getText().trim();

        PaymentController controller = new PaymentController();
        List<Payment> paymentList = controller.getPayments(selectedStatus, invoideIdSearch);

        String[] kolom = {"ID", "No", "Invoice_id", "Bukti_pembayaran", "Tanggal_bayar", "Jumlah_bayar", "Jenis_pembayaran", "Status"};
        DefaultTableModel model = new DefaultTableModel(null, kolom);

        int nomor = 1;
        for (Payment pay : paymentList) {
            Object[] row = {
                pay.getId(),
                nomor++,
                pay.getInvoiceId(),
                pay.getBuktiPembayaran(),
                pay.getTanggalBayar(),
                pay.getJumlahBayar(),
                pay.getJenisPembayaran(),
                pay.getStatusVerifikasi()
            };
            model.addRow(row);
        }

        tabelPayment.getColumnModel().getColumn(0).setMinWidth(0);
        tabelPayment.getColumnModel().getColumn(0).setMaxWidth(0);
        tabelPayment.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPayment = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        btnLihatBuktiTransaksi = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        cmbStatus = new javax.swing.JComboBox<>();
        btnVerifikasi = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("PAYMENT");

        tabelPayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelPayment);

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        btnLihatBuktiTransaksi.setText("Lihat bukti transaksi");
        btnLihatBuktiTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLihatBuktiTransaksiActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua", "menunggu", "diterima", "gagal" }));
        cmbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusActionPerformed(evt);
            }
        });

        btnVerifikasi.setText("Verifikasi");
        btnVerifikasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifikasiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnKembali)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerifikasi)
                        .addGap(7, 7, 7)
                        .addComponent(btnLihatBuktiTransaksi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCari, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnKembali)
                        .addComponent(btnLihatBuktiTransaksi)
                        .addComponent(btnCari)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVerifikasi)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLihatBuktiTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLihatBuktiTransaksiActionPerformed
        int selectedRow = tabelPayment.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data payment terlebih dahulu!");
            return;
        }

        int buktiColumnIndex = 3;
        String buktiPath = tabelPayment.getValueAt(selectedRow, buktiColumnIndex).toString();

        // Tambahkan path absolut
        File buktiFile = new File(System.getProperty("user.dir") + File.separator + buktiPath);
        System.out.println("Cek path file: " + buktiFile.getAbsolutePath());
        if (!buktiFile.exists()) {
            JOptionPane.showMessageDialog(this, "File bukti tidak ditemukan!\n" + buktiFile.getAbsolutePath());
            return;
        }

        JDialog dialog = new JDialog();
        dialog.setTitle("Bukti Pembayaran");
        dialog.setSize(600, 600);
        dialog.setLocationRelativeTo(this);

        JLabel imageLabel = new JLabel();
        imageLabel.setHorizontalAlignment(JLabel.CENTER);

        // Load gambar
        ImageIcon icon = new ImageIcon(buktiFile.getAbsolutePath());
        Image img = icon.getImage().getScaledInstance(550, 500, Image.SCALE_SMOOTH);
        imageLabel.setIcon(new ImageIcon(img));

        dialog.add(imageLabel);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnLihatBuktiTransaksiActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
        cl.show(adminDashboard.getPanelContent(), "Pembayaran");
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        filterDataPayment();
    }//GEN-LAST:event_cmbStatusActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        filterDataPayment();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnVerifikasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifikasiActionPerformed
        int selectedRow = tabelPayment.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data payment dulu!");
            return;
        }

        int paymentId = (int) tabelPayment.getValueAt(selectedRow, 0); // ID di kolom 0
        PaymentController controller = new PaymentController();
        Payment oldPayment = controller.getPaymentById(paymentId);

        if (oldPayment == null) {
            JOptionPane.showMessageDialog(this, "Data payment tidak ditemukan!");
            return;
        }

        String[] statusOptions = {"menunggu", "diterima", "gagal"};
        String newStatus = (String) JOptionPane.showInputDialog(
                this,
                "Pilih status verifikasi:",
                "Verifikasi Payment",
                JOptionPane.PLAIN_MESSAGE,
                null,
                statusOptions,
                oldPayment.getStatusVerifikasi() // default pilihan
        );

        if (newStatus != null && !newStatus.isEmpty()) {
            boolean success = controller.updatePaymentStatus(paymentId, newStatus);

            if (success) {
                JOptionPane.showMessageDialog(this, "Status berhasil diupdate!");
                tampilDataPayment();

                // Cek apakah perlu kirim email
                if (oldPayment.getStatusVerifikasi().equalsIgnoreCase("menunggu")) {
                    // Hanya kirim email jika perubahan dari menunggu → diterima / gagal
                    if (newStatus.equalsIgnoreCase("diterima") || newStatus.equalsIgnoreCase("gagal")) {
                        // Ambil student_id dari invoice
                        InvoiceController invoiceController = new InvoiceController();
                        Invoice invoice = invoiceController.getInvoiceById(oldPayment.getInvoiceId());

                        if (invoice != null) {
                            int studentId = invoice.getStudentId();
                            StudentController studentController = new StudentController();
                            Student student = studentController.getStudentById(studentId);

                            if (student != null && student.getEmail() != null && !student.getEmail().isEmpty()) {
                                String subject, body;

                                if (newStatus.equalsIgnoreCase("diterima")) {
                                    subject = "Pembayaran Anda Telah Diterima";
                                    body = "Halo " + student.getNamaLengkap() + ",\n\n"
                                            + "Pembayaran Anda telah *DITERIMA*. Berikut detailnya:\n\n"
                                            + "Nama: " + student.getNamaLengkap() + "\n"
                                            + "Kelas: " + student.getKelas() + "\n"
                                            + "NISN: " + student.getNisn() + "\n"
                                            + "Jumlah: Rp " + String.format("%,.2f", oldPayment.getJumlahBayar()) + "\n"
                                            + "Tanggal Bayar: " + oldPayment.getTanggalBayar() + "\n\n"
                                            + "Terima kasih.\n\n"
                                            + "Hormat kami,\nStaff Keuangan SMA Tadika Mesra";
                                } else {
                                    subject = "Pembayaran Anda Gagal Diproses";
                                    body = "Halo " + student.getNamaLengkap() + ",\n\n"
                                            + "Mohon maaf, pembayaran Anda *GAGAL DIPROSES*. Berikut detailnya:\n\n"
                                            + "Nama: " + student.getNamaLengkap() + "\n"
                                            + "Kelas: " + student.getKelas() + "\n"
                                            + "NISN: " + student.getNisn() + "\n"
                                            + "Jumlah: Rp " + String.format("%,.2f", oldPayment.getJumlahBayar()) + "\n"
                                            + "Tanggal Bayar: " + oldPayment.getTanggalBayar() + "\n\n"
                                            + "Silakan hubungi bagian keuangan sekolah.\n\n"
                                            + "Hormat kami,\nStaff Keuangan SMA Tadika Mesra";
                                }

                                EmailSender.sendEmail(student.getEmail(), subject, body);
                            }
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Gagal update status!");
            }
        }
    }//GEN-LAST:event_btnVerifikasiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnLihatBuktiTransaksi;
    private javax.swing.JButton btnVerifikasi;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelPayment;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
