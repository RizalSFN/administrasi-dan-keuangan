/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Admin.Pembayaran;

import controller.InvoiceController;
import controller.NotificationController;
import controller.PaymentController;
import controller.StudentController;
import controller.TransactionHistoryController;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.Invoice;
import model.Notification;
import model.Payment;
import model.Student;
import model.TransactionHistory;
import utils.EmailSender;
import view.Admin.AdminDashboard;

/**
 *
 * @author RIZAL
 */
public class FormPaymentPanel extends javax.swing.JPanel {

    private File selectedFile = null;
    private int selectedInvoiceId;
    private AdminDashboard adminDashboard;

    /**
     * Creates new form FormPaymentPanel
     */
    public FormPaymentPanel(AdminDashboard adminDashboard) {
        initComponents();
        this.adminDashboard = adminDashboard;
        this.selectedInvoiceId = 0;
    }

    public FormPaymentPanel(AdminDashboard adminDashboard, int invoiceId) {
        initComponents();
        this.adminDashboard = adminDashboard;
        this.selectedInvoiceId = invoiceId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtJumlahBayar = new javax.swing.JTextField();
        btnUpload = new javax.swing.JButton();
        dateTanggalBayar = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        cmbJenisPembayaran = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbStatusVerifikasi = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnKembali = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        lblNamaFile = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("FORM PEMBAYARAN");

        jLabel2.setText("Jumlah bayar");

        btnUpload.setText("Upload bukti");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        jLabel3.setText("Tanggal bayar");

        cmbJenisPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tunai", "non tunai" }));

        jLabel4.setText("Jenis pembayaran");

        cmbStatusVerifikasi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "menunggu", "diterima", "gagal" }));

        jLabel5.setText("Status pembayaran");

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        lblNamaFile.setText("nama file");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtJumlahBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(cmbJenisPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dateTanggalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(cmbStatusVerifikasi, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblNamaFile)))
                .addGap(198, 198, 198))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtJumlahBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTanggalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbJenisPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatusVerifikasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpload)
                    .addComponent(lblNamaFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKembali)
                    .addComponent(btnSimpan))
                .addGap(135, 135, 135))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        JFileChooser chooser = new JFileChooser();
        int result = chooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = chooser.getSelectedFile();
            lblNamaFile.setText(selectedFile.getName());
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            String jumlahText = txtJumlahBayar.getText().trim();
            Date tglBayar = dateTanggalBayar.getDate();
            String jenisPembayaran = cmbJenisPembayaran.getSelectedItem().toString();
            String statusVerifikasi = cmbStatusVerifikasi.getSelectedItem().toString();

            if (jumlahText.isEmpty() || tglBayar == null || selectedFile == null) {
                JOptionPane.showMessageDialog(this, "Lengkapi semua field!");
                return;
            }

            float jumlahBayar = Float.parseFloat(jumlahText);
            LocalDate tanggalBayar = tglBayar.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            // Simpan file bukti
            File folder = new File("uploads");
            if (!folder.exists()) {
                folder.mkdirs();
            }

            String buktiPath = "uploads/" + System.currentTimeMillis() + "_" + selectedFile.getName();
            Files.copy(selectedFile.toPath(), Paths.get(buktiPath), StandardCopyOption.REPLACE_EXISTING);

            // Simpan ke DB
            Payment payment = new Payment();
            payment.setInvoiceId(selectedInvoiceId);
            payment.setJumlahBayar(jumlahBayar);
            payment.setTanggalBayar(tanggalBayar);
            payment.setJenisPembayaran(jenisPembayaran);
            payment.setStatusVerifikasi(statusVerifikasi);
            payment.setBuktiPembayaran(buktiPath);

            PaymentController controller = new PaymentController();
            int paymentId = controller.createPayment(payment);

            InvoiceController invoiceController = new InvoiceController();
            int studentId = invoiceController.getStudentIdByInvoiceId(selectedInvoiceId);

            if (paymentId > 0) {
                TransactionHistoryController historyController = new TransactionHistoryController();

                TransactionHistory history = new TransactionHistory();
                history.setStudentId(studentId);
                history.setPaymentId(paymentId);
                history.setKeterangan("Pembayaran SPP bulan Juli");
                history.setWaktuCatat(LocalDateTime.now());

                boolean historySuccess = historyController.addHistory(history);

                if (statusVerifikasi.equalsIgnoreCase("diterima")) {
                    StudentController studentController = new StudentController();
                    Student student = studentController.getStudentById(studentId);

                    if (student != null && student.getEmail() != null && !student.getEmail().isEmpty()) {
                        String subject = "Konfirmasi Pembayaran SPP Anda Telah Diterima";

                        String emailBody = "Halo " + student.getNamaLengkap() + ",\n\n"
                                + "Pembayaran Anda untuk tagihan sekolah telah *DITERIMA*. Berikut detailnya:\n\n"
                                + "Nama: " + student.getNamaLengkap() + "\n"
                                + "Kelas: " + student.getKelas() + "\n"
                                + "NISN: " + student.getNisn() + "\n"
                                + "Jumlah Bayar: Rp " + String.format("%,.2f", payment.getJumlahBayar()) + "\n"
                                + "Tanggal Bayar: " + payment.getTanggalBayar() + "\n\n"
                                + "Terima kasih telah melakukan pembayaran tepat waktu.\n\n"
                                + "Hormat kami,\n"
                                + "Staff Administrasi dan Keuangan\n"
                                + "SMA Tadika Mesra";

                        EmailSender.sendEmail(student.getEmail(), subject, emailBody);

                        Notification notification = new Notification();
                        notification.setNotificationCategoryId(2);
                        notification.setStudentId(studentId);
                        notification.setInvoiceId(selectedInvoiceId);
                        notification.setTitle(subject);
                        notification.setBody(emailBody);
                        notification.setDestination(student.getEmail());
                        notification.setSendAt(LocalDateTime.now());
                        notification.setStatus("terkirim");

                        NotificationController nc = new NotificationController();
                        nc.createNotification(notification);
                    }
                } else if (statusVerifikasi.equalsIgnoreCase("gagal")) {
                    StudentController studentController = new StudentController();
                    Student student = studentController.getStudentById(studentId);

                    if (student != null && student.getEmail() != null && !student.getEmail().isEmpty()) {
                        String subject = "Konfirmasi Pembayaran SPP Anda Gagal";

                        String emailBody = "Halo " + student.getNamaLengkap() + ",\n\n"
                                + "Pembayaran Anda untuk tagihan sekolah *GAGAL*. Berikut detailnya:\n\n"
                                + "Nama: " + student.getNamaLengkap() + "\n"
                                + "Kelas: " + student.getKelas() + "\n"
                                + "NISN: " + student.getNisn() + "\n"
                                + "Jumlah Bayar: Rp " + String.format("%,.2f", payment.getJumlahBayar()) + "\n"
                                + "Tanggal Bayar: " + payment.getTanggalBayar() + "\n\n"
                                + "Silahkan hubungi Staff Administrasi dan Keuangan.\n\n"
                                + "Hormat kami,\n"
                                + "Staff Administrasi dan Keuangan\n"
                                + "SMA Tadika Mesra";

                        EmailSender.sendEmail(student.getEmail(), subject, emailBody);

                        Notification notification = new Notification();
                        notification.setNotificationCategoryId(2);
                        notification.setStudentId(studentId);
                        notification.setInvoiceId(selectedInvoiceId);
                        notification.setTitle(subject);
                        notification.setBody(emailBody);
                        notification.setDestination(student.getEmail());
                        notification.setSendAt(LocalDateTime.now());
                        notification.setStatus("terkirim");

                        NotificationController nc = new NotificationController();
                        nc.createNotification(notification);
                    }
                }

                InvoiceController ic = new InvoiceController();
                Invoice prevInvoice = invoiceController.getInvoiceById(selectedInvoiceId);

                if (prevInvoice != null) {
                    // Hitung tanggal jatuh tempo akhir bulan berikutnya
                    LocalDate jatuhTempoLama = prevInvoice.getTanggalJatuhTempo();
                    LocalDate jatuhTempoBaru = jatuhTempoLama.plusMonths(1);
                    LocalDate akhirBulanDepan = jatuhTempoBaru.withDayOfMonth(jatuhTempoBaru.lengthOfMonth());

                    // Buat invoice baru
                    Invoice invoiceBaru = new Invoice();
                    invoiceBaru.setStudentId(studentId);
                    invoiceBaru.setJumlah(prevInvoice.getJumlah());
                    invoiceBaru.setTanggalJatuhTempo(akhirBulanDepan);
                    invoiceBaru.setStatus("belum lunas");

                    // Simpan ke database
                    int invoiceId = invoiceController.createNewInvoiceReturnId(invoiceBaru);
                    invoiceBaru.setId(invoiceId);

                    Student student = new StudentController().getStudentById(studentId);

                    if (student != null && student.getEmail() != null && !student.getEmail().isEmpty()) {
                        String subjectTagihan = "Tunggakan Pembayaran Selanjutnya";

                        String bodyTagihan = "Halo " + student.getNamaLengkap() + ",\n\n"
                                + "Kami ingin mengingatkan bahwa Anda memiliki tagihan sekolah berikutnya.\n\n"
                                + "Nama: " + student.getNamaLengkap() + "\n"
                                + "Kelas: " + student.getKelas() + "\n"
                                + "NISN: " + student.getNisn() + "\n"
                                + "Jumlah Tagihan: Rp " + String.format("%,.2f", invoiceBaru.getJumlah()) + "\n"
                                + "Jatuh Tempo: " + invoiceBaru.getTanggalJatuhTempo() + "\n\n"
                                + "Mohon untuk melakukan pembayaran sebelum tanggal jatuh tempo.\n\n"
                                + "Hormat kami,\n"
                                + "Staff Administrasi dan Keuangan\n"
                                + "SMA Tadika Mesra";

                        EmailSender.sendEmail(student.getEmail(), subjectTagihan, bodyTagihan);

                        Notification tagihanNotif = new Notification();
                        tagihanNotif.setNotificationCategoryId(1);
                        tagihanNotif.setStudentId(studentId);
                        tagihanNotif.setInvoiceId(invoiceBaru.getId()); // pastikan ID invoiceBaru diperoleh jika tersedia
                        tagihanNotif.setTitle(subjectTagihan);
                        tagihanNotif.setBody(bodyTagihan);
                        tagihanNotif.setDestination(student.getEmail());
                        tagihanNotif.setSendAt(LocalDateTime.now());
                        tagihanNotif.setStatus("terkirim");

                        NotificationController nc = new NotificationController();
                        nc.createNotification(tagihanNotif);
                    }
                }

                JOptionPane.showMessageDialog(this, "Berhasil menyimpan pembayaran!");
                CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
                cl.show(adminDashboard.getPanelContent(), "PembayaranInvoice");

                PembayaranInvoicePanel pembayaranInvoicePanel = adminDashboard.getPembayaranInvoicePanel();
                pembayaranInvoicePanel.tampilDataInvoice();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan pembayaran!");
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
        cl.show(adminDashboard.getPanelContent(), "Pembayaran");
    }//GEN-LAST:event_btnKembaliActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUpload;
    private javax.swing.JComboBox<String> cmbJenisPembayaran;
    private javax.swing.JComboBox<String> cmbStatusVerifikasi;
    private com.toedter.calendar.JDateChooser dateTanggalBayar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblNamaFile;
    private javax.swing.JTextField txtJumlahBayar;
    // End of variables declaration//GEN-END:variables
}
