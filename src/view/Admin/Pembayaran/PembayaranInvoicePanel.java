/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Admin.Pembayaran;

import controller.InvoiceController;
import controller.NotificationController;
import java.awt.CardLayout;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Invoice;
import model.Notification;
import view.Admin.AdminDashboard;

/**
 *
 * @author RIZAL
 */
public class PembayaranInvoicePanel extends javax.swing.JPanel {

    private AdminDashboard adminDashboard;

    /**
     * Creates new form PembayaranInvoicePanel
     */
    public PembayaranInvoicePanel(AdminDashboard adminDashboard) {
        initComponents();
        this.adminDashboard = adminDashboard;
        tampilDataInvoice();
    }

    public void tampilDataInvoice() {
        InvoiceController controller = new InvoiceController();
        List<Invoice> invoiceList = controller.getFilteredInvoices(null, null);

        String[] kolom = {"ID", "No", "Siswa", "NISN", "Jumlah", "Tanggal Jatuh Tempo", "Status"};
        DefaultTableModel model = new DefaultTableModel(null, kolom);

        int nomor = 1;
        for (Invoice inv : invoiceList) {
            Object[] row = {
                inv.getId(),
                nomor++,
                inv.getStudentName(),
                inv.getStudentNisn(),
                inv.getJumlah(),
                inv.getTanggalJatuhTempo(),
                inv.getStatus()
            };
            model.addRow(row);
        }

        tabelInvoice.getColumnModel().getColumn(0).setMinWidth(0);
        tabelInvoice.getColumnModel().getColumn(0).setMaxWidth(0);
        tabelInvoice.setModel(model);
    }

    public void filterDataInvoice() {
        String selectedStatus = cmbStatus.getSelectedItem().toString();
        String nisnSearch = txtCari.getText().trim();

        InvoiceController controller = new InvoiceController();
        List<Invoice> invoiceList = controller.getFilteredInvoices(selectedStatus, nisnSearch);

        String[] kolom = {"ID", "No", "Siswa", "NISN", "Jumlah", "Tanggal Jatuh Tempo", "Status"};
        DefaultTableModel model = new DefaultTableModel(null, kolom);

        int nomor = 1;
        for (Invoice inv : invoiceList) {
            Object[] row = {
                inv.getId(),
                nomor++,
                inv.getStudentName(),
                inv.getStudentNisn(),
                inv.getJumlah(),
                inv.getTanggalJatuhTempo(),
                inv.getStatus()
            };
            model.addRow(row);
        }

        tabelInvoice.getColumnModel().getColumn(0).setMinWidth(0);
        tabelInvoice.getColumnModel().getColumn(0).setMaxWidth(0);
        tabelInvoice.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelInvoice = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox<>();
        btnTambah = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("INVOICE");

        tabelInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelInvoice);

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua", "lunas", "belum lunas", "terlambat" }));
        cmbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKembali)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTambah)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCari))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKembali)
                    .addComponent(btnCari)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambah)
                    .addComponent(btnBayar))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
        cl.show(adminDashboard.getPanelContent(), "Pembayaran");
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
        cl.show(adminDashboard.getPanelContent(), "FormInvoice");
    }//GEN-LAST:event_btnTambahActionPerformed

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        filterDataInvoice();
    }//GEN-LAST:event_cmbStatusActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        filterDataInvoice();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        int selectedRow = tabelInvoice.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data invoice dulu!");
            return;
        }

        int invoiceId = Integer.parseInt(tabelInvoice.getValueAt(selectedRow, 0).toString());

        InvoiceController controller = new InvoiceController();
        Invoice invoice = controller.getInvoiceById(invoiceId);

        if (invoice != null) {
            FormPaymentPanel form = new FormPaymentPanel(adminDashboard, invoiceId);
            CardLayout cl = (CardLayout) adminDashboard.getPanelContent().getLayout();
            adminDashboard.getPanelContent().add(form, "FormPayment");
            cl.show(adminDashboard.getPanelContent(), "FormPayment");
        } else {
            JOptionPane.showMessageDialog(this, "Data invoice tidak ditemukan!");
        }
    }//GEN-LAST:event_btnBayarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelInvoice;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
